---
    - hosts: localhost
      connection: local

      vars:
        RUBY_VERSION: "2.5.8"
        BUNDLER_VERSION: "1.17.3"
        NODE_VERSION: "12.14.0"
        YARN_VERSION: "1.21.1"
        SSH_KEY: "$HOME/.ssh/id_rsa"
        SSH_CONFIG: "$HOME/.ssh/config"
        EXTRA_PATH: "~/.rbenv/bin"
        TERRAFORM_VERSION: "0.12.29"
        HELM2_VERSION: "2.14.3"
        HELM3_VERSION: "3.3.4"
        HELM2_DIFF_VERSION: "2.11.0+5"
        HELM2_DIFF_ESCAPED_VER: "v2.11.0%2B5"

      tasks:
        - import_tasks: fedora.yml
          when: ansible_facts['distribution'] == "Fedora"

        - name: Clone rbenv to ~/.rbenv
          git:
            repo: https://github.com/rbenv/rbenv.git
            dest: ~/.rbenv
            update: no

        - name: 'Add {{ EXTRA_PATH }} if PATH does not exist'
          lineinfile:
              path: ~/.bash_profile
              line: 'export PATH="{{ EXTRA_PATH }}:$PATH"'
              insertafter: EOF
          when: lookup('file', '~/.bash_profile') is not search('^\s*PATH\s*=')

        - name: Check ruby-build exists in ~/.rbenv/plugins
          stat: path=~/.rbenv/plugins/ruby-build
          register: rubybuild

        - name: Install ruby-build to ~/.rbenv/plugins
          shell: |
            . ~/.bash_profile
            mkdir -p ~/.rbenv/plugins
            git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
          when: not rubybuild.stat.exists

        - name: Run rbenv install script
          script:
            cmd: scripts/install_rbenv.sh -r {{ RUBY_VERSION }} -b {{ BUNDLER_VERSION }} -d
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Install nvm
          script:
            cmd: /usr/bin/curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Install helmfile in ~/bin
          get_url:
            url: https://github.com/roboll/helmfile/releases/download/v0.129.3/helmfile_linux_amd64
            dest: "~/bin/helmfile"
            mode: 0764

        - name: Check kops exists in ~/bin
          stat: path=~/bin/kops
          register: kops

        - name: Install kops to ~/bin
          shell: |
            curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
            chmod +x kops-linux-amd64
            mv kops-linux-amd64 ~/bin/kops
          when: not kops.stat.exists
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Check awscliv2 exists in ~/bin
          stat: path=~/bin/aws
          register: aws

        - name: Install awscli v2 to ~/bin
          shell: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install --install-dir ~/bin --bin-dir ~/bin
            rm awscliv2.zip
            rm -rf aws
          when: not aws.stat.exists
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Check aws-vault exists in ~/bin
          stat: path=~/bin/aws-vault
          register: awsvault

        - name: Get latest aws-vault and install in ~/bin
          get_url:
            url: https://github.com/99designs/aws-vault/releases/latest/download/aws-vault-linux-amd64
            dest: "~/bin/aws-vault"
            mode: 0764
          when: not awsvault.stat.exists

        - name: install the AWS session manager plugin rpm
          dnf:
            disable_gpg_check: yes
            name: https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm
          become: yes

        - name: Show debug output
          debug:
            var: result

        - name: Check kubectx directory exists
          stat: path=~/.kubectx
          register: kubectxbin

        - name: Run kubectx install script
          script:
            cmd: scripts/install_kubectx.sh
          when: not kubectxbin.stat.exists
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Check kubectx links exist in bash-completion dir
          stat: path=/usr/share/bash-completion/completions/kubectx
          register: kubectx

        - name: Install kubectx and kubens links to bash-completion dir
          shell: |
            COMPDIR=$(pkg-config --variable=completionsdir bash-completion)
            sudo ln -sf {{ ansible_env.HOME }}/.kubectx/completion/kubens.bash $COMPDIR/kubens
            sudo ln -sf {{ ansible_env.HOME }}/.kubectx/completion/kubectx.bash $COMPDIR/kubectx
          when: not kubectx.stat.exists
          register: result
          become: yes

        - name: Show debug output
          debug:
            var: result

        - name: Check helm exists in ~/bin
          stat: path=~/bin/helm
          register: helm

        - name: Install helm v{{ HELM2_VERSION }} to ~/bin
          shell: |
            curl "https://get.helm.sh/helm-v{{ HELM2_VERSION }}-linux-amd64.tar.gz" -o helm-v{{ HELM2_VERSION }}-linux-amd64.tar.gz
            tar xzvf helm-v{{ HELM2_VERSION }}-linux-amd64.tar.gz
            mv linux-amd64/helm ~/bin
            mv linux-amd64/tiller ~/bin
            rm helm-v{{ HELM2_VERSION }}-linux-amd64.tar.gz
            rm -rf linux-amd64/
          when: not helm.stat.exists
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Check helm3 exists in ~/bin
          stat: path=~/bin/helm3
          register: helm3

        - name: Install helm v{{ HELM3_VERSION }} to ~/bin
          shell: |
            curl "https://get.helm.sh/helm-v{{ HELM3_VERSION }}-linux-amd64.tar.gz" -o helm-v{{ HELM3_VERSION }}-linux-amd64.tar.gz
            tar xzvf helm-v{{ HELM3_VERSION }}-linux-amd64.tar.gz
            mv linux-amd64/helm ~/bin/helm3
            rm helm-v{{ HELM3_VERSION }}-linux-amd64.tar.gz
            rm -rf linux-amd64/
          when: not helm3.stat.exists
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Check helm home plugins dir exists
          stat: path=~/.helm/plugins
          register: plugins

        - name: create helm home dir
          file:
            path: "{{ ansible_env.HOME }}/.helm/plugins"
            state: directory
            mode: '0755'
          when: not plugins.stat.exists

        - name: Check helm diff exists in helm home
          stat: path={{ ansible_env.HOME }}/.helm/plugins/diff
          register: helmdiff

        - name: Install helm-diff v{{ HELM2_DIFF_VERSION }} to helm home
          shell: |
            curl -L "https://github.com/databus23/helm-diff/releases/download/{{ HELM2_DIFF_ESCAPED_VER }}/helm-diff-linux.tgz" | tar -C $(helm home)/plugins -xzv
          when: not helmdiff.stat.exists
          register: result

        - name: Show debug output
          debug:
            var: result

        - name: Check helm3 diff exists
          stat: path=~/.cache/helm/plugins/https-github.com-databus23-helm-diff
          register: helm3diff

        - name: Install helm-diff for helm3
          shell: |
            helm3 plugin install https://github.com/databus23/helm-diff
          register: result
          when: not helm3diff.stat.exists

        - name: Show debug output
          debug:
            var: result

        - name: Check if .tfenv dir exists in home
          stat: path={{ ansible_env.HOME }}/.tfenv
          register: tfenvdir

        - name: Clone tfenv repository
          git:
            repo: https://github.com/tfutils/tfenv.git
            dest: ~/.tfenv
            update: no

        - name: Create links in ~/bin to ~/.tfenv/bin
          shell: |
            if [ -e ~/bin/terraform ]; then
              mv ~/bin/terraform ~/bin/terraform.orig
            fi
            if [ -e ~/bin/tfenv ]; then
              mv ~/bin/tfenv ~/bin/tfenv.orig
            fi
            ln -s ~/.tfenv/bin/* ~/bin/
          register: result

        - name: Show debug output
          debug:
              var: result
